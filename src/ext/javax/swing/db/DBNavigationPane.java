/*
 * DBNavigationPane.java
 *
 * Created on January 20, 2008, 3:56 PM
 */

package ext.javax.swing.db;

import ext.java.sql.event.RecordSetChangeEvent;
import ext.java.sql.event.RecordSetChangeListener;
import ext.java.util.VetoException;
import javax.swing.JOptionPane;

/*TODO 1.1 - Change mechanics so that DBNavigationPane is a container for DBSourceControls
 * similiar to the way a ScrollPane is a container for other widgets. Also, make
 * sure that it is comptable with DBTable. This would mean breaking the
 * DBSourceControl interface into 2: a simple RecordSetControl interface and
 * then a more complex child interface RecordSetContainer
 */

/**
 *
 * @author  Menachem & Shira
 */
public class DBNavigationPane extends javax.swing.JPanel implements RecordSetChangeListener{
  
  /**
   * Creates new form DBNavigationPane
   */
  public DBNavigationPane() {this(null);}
  
  public DBNavigationPane(DBRecordSetContainer source) {
    setSource(source);
    initComponents();
    initMyComponents();
  }
  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
  private void initComponents() {
    lblRecord = new javax.swing.JLabel();
    btnFirst = new javax.swing.JButton();
    btnPrevious = new javax.swing.JButton();
    btnNext = new javax.swing.JButton();
    btnLast = new javax.swing.JButton();
    txtRecordNum = new javax.swing.JTextField();
    btnNew = new javax.swing.JButton();
    lblCount = new javax.swing.JLabel();
    btnSave = new javax.swing.JButton();
    btnDelete = new javax.swing.JButton();

    setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

    setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    lblRecord.setText("Record: ");
    lblRecord.setPreferredSize(new java.awt.Dimension(50, 20));
    add(lblRecord);

    btnFirst.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/first.JPG")));
    btnFirst.setDefaultCapable(false);
    btnFirst.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    btnFirst.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    btnFirst.setIconTextGap(0);
    btnFirst.setMargin(new java.awt.Insets(0, 0, 0, 0));
    btnFirst.setPreferredSize(new java.awt.Dimension(20, 20));
    btnFirst.setVerticalAlignment(javax.swing.SwingConstants.TOP);
    btnFirst.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        btnFirstMouseClicked(evt);
      }
    });

    add(btnFirst);

    btnPrevious.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/previous.JPG")));
    btnPrevious.setDefaultCapable(false);
    btnPrevious.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    btnPrevious.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    btnPrevious.setIconTextGap(0);
    btnPrevious.setMargin(new java.awt.Insets(0, 0, 0, 0));
    btnPrevious.setPreferredSize(new java.awt.Dimension(20, 20));
    btnPrevious.setVerticalAlignment(javax.swing.SwingConstants.TOP);
    btnPrevious.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        btnPreviousMouseClicked(evt);
      }
    });

    add(btnPrevious);

    btnNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/next.JPG")));
    btnNext.setDefaultCapable(false);
    btnNext.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    btnNext.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    btnNext.setIconTextGap(0);
    btnNext.setMargin(new java.awt.Insets(0, 0, 0, 0));
    btnNext.setPreferredSize(new java.awt.Dimension(20, 20));
    btnNext.setVerticalAlignment(javax.swing.SwingConstants.TOP);
    btnNext.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        btnNextMouseClicked(evt);
      }
    });

    add(btnNext);

    btnLast.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/last.JPG")));
    btnLast.setDefaultCapable(false);
    btnLast.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    btnLast.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    btnLast.setIconTextGap(0);
    btnLast.setMargin(new java.awt.Insets(0, 0, 0, 0));
    btnLast.setPreferredSize(new java.awt.Dimension(20, 20));
    btnLast.setVerticalAlignment(javax.swing.SwingConstants.TOP);
    btnLast.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        btnLastMouseClicked(evt);
      }
    });

    add(btnLast);

    txtRecordNum.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    txtRecordNum.setText("<num>");
    txtRecordNum.setPreferredSize(new java.awt.Dimension(60, 20));
    txtRecordNum.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        txtRecordNumActionPerformed(evt);
      }
    });
    txtRecordNum.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusLost(java.awt.event.FocusEvent evt) {
        txtRecordNumFocusLost(evt);
      }
    });

    add(txtRecordNum);

    btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/new.JPG")));
    btnNew.setDefaultCapable(false);
    btnNew.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    btnNew.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    btnNew.setIconTextGap(0);
    btnNew.setMargin(new java.awt.Insets(0, 0, 0, 0));
    btnNew.setPreferredSize(new java.awt.Dimension(25, 20));
    btnNew.setVerticalAlignment(javax.swing.SwingConstants.TOP);
    btnNew.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        btnNewMouseClicked(evt);
      }
    });

    add(btnNew);

    lblCount.setText("of <count>");
    add(lblCount);

    btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/save.JPG")));
    btnSave.setEnabled(false);
    btnSave.setPreferredSize(new java.awt.Dimension(20, 20));
    btnSave.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        btnSaveMouseClicked(evt);
      }
    });

    add(btnSave);

    btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/delete.JPG")));
    btnDelete.setPreferredSize(new java.awt.Dimension(20, 20));
    btnDelete.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        btnDeleteMouseClicked(evt);
      }
    });

    add(btnDelete);

  }// </editor-fold>//GEN-END:initComponents


  protected void initMyComponents() {
       
  }
  
  private void txtRecordNumFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRecordNumFocusLost
    updateRecordNum();  
  }//GEN-LAST:event_txtRecordNumFocusLost

  private void btnDeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMouseClicked
    getSource().deleteRecord();
  }//GEN-LAST:event_btnDeleteMouseClicked

  private void btnSaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseClicked
    getSource().saveRecord();
  }//GEN-LAST:event_btnSaveMouseClicked

  private void txtRecordNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRecordNumActionPerformed
    updateRecordNum();
  }//GEN-LAST:event_txtRecordNumActionPerformed

  private void btnNextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNextMouseClicked
    getSource().nextRecord();
  }//GEN-LAST:event_btnNextMouseClicked

  private void btnLastMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLastMouseClicked
     getSource().lastRecord();
  }//GEN-LAST:event_btnLastMouseClicked

  private void btnNewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNewMouseClicked
    getSource().newRecord();
  }//GEN-LAST:event_btnNewMouseClicked

  private void btnPreviousMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPreviousMouseClicked
    getSource().previousRecord();
  }//GEN-LAST:event_btnPreviousMouseClicked

  private void btnFirstMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFirstMouseClicked
    getSource().firstRecord();
  }//GEN-LAST:event_btnFirstMouseClicked
  
  
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton btnDelete;
  private javax.swing.JButton btnFirst;
  private javax.swing.JButton btnLast;
  private javax.swing.JButton btnNew;
  private javax.swing.JButton btnNext;
  private javax.swing.JButton btnPrevious;
  private javax.swing.JButton btnSave;
  private javax.swing.JLabel lblCount;
  private javax.swing.JLabel lblRecord;
  private javax.swing.JTextField txtRecordNum;
  // End of variables declaration//GEN-END:variables

  // If the users requests a new record number, have the form go to that record
  public void updateRecordNum() {
    // TODO 3 - If the user enters a number that is invalid, there are duplicate error messegas
     try {
      if (getSource().setRecordNum(Integer.parseInt(txtRecordNum.getText())) == false)
        throw new Exception();
    } catch (Exception ex) {
      JOptionPane.showMessageDialog(this, "The record number you intered is invalid.",
        "Error", JOptionPane.ERROR_MESSAGE);
    }
  }
  
  // Respond to the record number changing
  public void setRecordNum(int recordNum) {
    // Update the text field
    txtRecordNum.setText(Integer.toString(recordNum));
  }
  
  protected void setRecordCount(int recordCount) {
    lblCount.setText(Integer.toString(recordCount));
  }

  public void recordSelected(RecordSetChangeEvent evt) {
    setRecordNum(getRecordNum());
    btnSave.setEnabled(false);
    updateButtons();
  }
  public void recordSetChanged(RecordSetChangeEvent evt) {
    setRecordCount(getRecordCount());
    updateButtons();
  }
  public void recordWillBeInserted (RecordSetChangeEvent evt) throws VetoException {}
  public void recordInserted (RecordSetChangeEvent evt) {
    setRecordCount(getRecordCount());
    btnSave.setEnabled(false);
    updateButtons();
  }
  public void recordDirtied(RecordSetChangeEvent evt) {
    btnSave.setEnabled(true);
    if (getRecordNum() == getRecordCount() + 1) {
      btnNext.setEnabled(true);
      btnNew.setEnabled(true);
      btnDelete.setEnabled(false);
      setRecordCount(getRecordCount() + 1);
    }
  }
  public void recordWillBeUpdated(RecordSetChangeEvent evt) throws VetoException {}
  public void recordUpdated(RecordSetChangeEvent evt) {
    btnSave.setEnabled(false);
  }
  public void recordWillBeDeleted(RecordSetChangeEvent evt) throws VetoException {}
  
  public void recordDeleted(RecordSetChangeEvent evt) {
    setRecordCount(getRecordCount());
    updateButtons();
  }
  
  // Disable\Enable the buttons that are un\aappropriate for the current record number
  public void updateButtons() {
    if (getRecordNum() == 1)
      btnPrevious.setEnabled(false);
    else 
      btnPrevious.setEnabled(true);
      
    if (getRecordNum() == getRecordCount() + 1) {
      btnNext.setEnabled(false);
      btnNew.setEnabled(false);
      btnDelete.setEnabled(false);
    }
    else {
      btnNew.setEnabled(getSource().getInsertsAllowed());
      btnDelete.setEnabled(getSource().getDeletesAllowed());
      if (getRecordNum() != getRecordCount())
        btnNext.setEnabled(true);
      else
        btnNext.setEnabled(getSource().getInsertsAllowed());
    }
  }
  
  public int getRecordNum() {return getSource().getRecordNum();}
  public int getRecordCount() {return getSource().getRecordCount();}
  

  public DBRecordSetContainer getSource() {return source;}
  public void setSource(DBRecordSetContainer source) {this.source = source;}
 
  protected DBRecordSetContainer source;


}
